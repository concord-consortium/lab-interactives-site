{
  "title": "Parachute Drop for CIDSEE",
  "publicationStatus": "draft",
  "subtitle": "Explore parachutes and air resistance.",
  "aspectRatio": 1,
  "fontScale": 1,
  "about": [
    "If you've ever felt the wind in your face while riding a bike, then you have felt air resistance.",
    "The faster you go the harder air resistance pushes back. Skydivers rely on this force ",
    "to prevent them from continually going faster and faster. Eventually, at some particular speed the ",
    "force from air resistance is equal to the force of gravity and the skydiver stops speeding up. ",
    "The velocity reached when you stop getting faster is called *terminal velocity* .",
    "",
    "Explore factors that affect terminal velocity by using this simulation of a parachute jumper."
  ],
  "models": [
    {
      "type": "md2d",
      "id": "parachute-model",
      "url": "models-converted/lab-version/1/md2d/inquiry-space/parachute/parachute$0.json",
      "viewOptions": {
        "controlButtons": "play_reset_step",
        "controlButtonStyle": "video",
        "imageMapping": {
          "parachute700.png": "parachute700.svg",
          "parachute800.png": "parachute800.svg",
          "parachute900.png": "parachute900.svg",
          "parachute1000.png": "parachute1000.svg",
          "parachute1100.png": "parachute1100.svg"
        }
      },
      "modelOptions": {
        "unitsScheme": "mks",
        "timeStepsPerTick": 416,
        "timeStep": 1,
        "modelSampleRate": 20
      },
      "onLoad": [
        "function setGraphRange() {",
        "  setComponentAttributes('distance-graph', {'xmax': get('experimentDuration')*1.1});",
        "  setComponentAttributes('vel-graph', {'xmax': get('experimentDuration')*1.1});",
        "}",
        "function setControlState() {",
        "  setComponentDisabled('mass-slider', !get('isStopped'));",
        "  setComponentDisabled('resistance-slider', !get('isStopped'));",
        "}",
        "onPropertyChange('isStopped', setControlState);",
        "onPropertyChange('experimentDuration', setGraphRange);",
        "onPropertyChange('durationEnabled', function(){ setComponentDisabled('duration-slider', !(get('durationEnabled'))); });",
        "var counter = 0;",
        "var lastVy = 999;",
        "var TVMessageTime = 999;",
        "var sigDig = 1000;  // set how many digits to round vy when checking for match to last vy (terminal velocity reached)",
        "onPropertyChange('time', function() {",
        "   var props = getAtomProperties(0);",
        "   if ((props.y < 1) || (get('time') > TVMessageTime)) {",
        "     stop();",
        "   }",
        "   counter++;",
        "// adding textbox instead of shape because model stuttered when adding new shape but not textbox",
        "   if ((counter % 4) === 0) {",
        "      var rad = 0.01;",
        "      addTextBox({",
        "        x: props.x - 0.45,",
        "        y: props.y + 0.55,",
        "        fontSize: 0.5,",
        "        text: '.'",
        "      });",
        "   }",
        "   lastVy = Math.round(props.vy*sigDig)/sigDig;",
        "});",
        "setGraphRange();",
        "setControlState();",
        "setTextBoxProperties(0, { x: 10 });"
       ]
    }
  ],
  "parameters": [
    {
      "name": "experimentDuration",
      "initialValue": 3
    },
    {
      "name": "durationEnabled",
      "initialValue": false
    },
    {
      "name": "mass-of-jumper",
      "initialValue": 200,
      "onChange": [
        "var volFactor = 1000;",
        "var massToVol = value/volFactor;",
        "var radius = Math.pow((massToVol * 3) / (4 * Math.PI), 0.3333);  // assumes sphere - used to scale radius with mass",
        "setElementProperties(2, { mass: value, sigma: radius });"
      ]
    },
    {
      "name": "parachute-size",
      "initialValue": 900,
      "onChange": [
        "setAtomProperties(0, { friction: value });",
        "for (var i=700; i <= 1100; i = i + 100) {",
        "   var imageNum = 4 - ((i/100) - 7);",
        "   var isVisble = (i == value);",
        "   setImageProperties(imageNum, { visible: isVisble });",
        "}"
      ]
    }
  ],
  "outputs": [
    {
      "name": "distance",
      "unitAbbreviation": "m",
      "label": "Distance to surface",
      "value": "return ((getAtomProperties(0).y - 1) < 0 ? 0 : getAtomProperties(0).y - 1);"
    },
    {
      "name": "vel",
      "unitAbbreviation": "m/s",
      "label": "Velocity",
      "value": "return getAtomProperties(0).vy* -1;"
    }
  ],
  "exports": {
    "perRun": [
      "mass-of-jumper",
      "parachute-size"
    ],
    "perTick": [
      "distance",
      "vel"
    ]
  },
  "propertiesToRetain": [],
  "components": [
    {
      "type": "slider",
      "id": "mass-slider",
      "min": 100,
      "max": 300,
      "displayValue": "return format('.0f')(value)",
      "steps": 8,
      "title": "Mass of jumper (g)",
      "property": "mass-of-jumper"
    },
    {
      "type": "slider",
      "id": "resistance-slider",
      "min": 700,
      "max": 1100,
      "displayValue": "return format('.0f')(value)",
      "steps": 4,
      "title": "Parachute size (cmÂ²)",
      "property": "parachute-size"
    },
    {
      "type": "graph",
      "id": "distance-graph",
      "properties": [ "distance" ],
      "xlabel": "Time (s)",
      "ylabel": "Distance (m)",
      "title": "Distance vs. Time",
      "units": true,
      "ymin": -0.5,
      "ymax": 9,
      "xTickCount": 5,
      "yTickCount": 5,
      "height": "13em"
    },
    {
      "type": "graph",
      "id": "vel-graph",
      "properties": [ "vel"] ,
      "xlabel": "Time (s)",
      "ylabel": "Velocity (m/s)",
      "title": "Velocity vs. Time",
      "units": true,
      "ymin": 0,
      "ymax": 4,
      "xTickCount": 5,
      "yTickCount": 5,
      "height": "13em"
    }
  ],
  "layout": {
    "right": [
      ["distance-graph"],
      ["vel-graph"]
    ],
    "bottom": [
      [
        "mass-slider",
        "resistance-slider"
      ]
    ]
  },
  "template": [
    {
      "id": "bottom",
      "top": "model.bottom",
      "padding-top": "0.5em"
    },
    {
      "id": "right",
      "top": "model.top",
      "left": "model.right",
      "right": "interactive.right",
      "height": "model.height",
      "padding-left": "1em",
      "padding-right": "0.5em"
    }
  ]

}