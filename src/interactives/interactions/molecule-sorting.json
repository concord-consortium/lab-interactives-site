{
  "title": "Molecule Sorting",
  "publicationStatus": "public",
  "labEnvironment": "production",
  "subtitle": "Add various molecules to oil and water to observe how they sort.",
  "category": "",
  "subCategory": "",
  "screenshot": "",
  "aspectRatio": 1.45,
  "fontScale": 1,
  "lang": "en-US",
  "i18nMetadata": "locales/metadata/interactives/interactions/molecule-sorting.json",
  "credits": "",
  "helpOnLoad": false,
  "aboutOnLoad": true,
  "about": [
    "Add various molecules to a mixture of oil and water, and observe where they tend to end up. ",
    "The three molecule colors (purple, orange, and grey) represent polar and nonpolar molecules with ",
    "hydrophilic and hydrophobic properties. Can you tell which ones are polar, nonpolar, or both by how ",
    "they interact with oil and water?",
    "***",
    "*This simulation was developed by [the Interactions project](https://concord.org/projects/interactions \"the Interactions Project\") ",
    "with funding from the National Science Foundation (DRL-1232388) in partnership with ",
    "[the CREATE for STEM Institute](http://create4stem.msu.edu/ \"the CREATE for STEM Institute\") at Michigan State University. To learn more, ",
    "[visit the Interactions curriculum collection](https://learn.concord.org/interactions \"visit the Interactions curriculum collection\") in ",
    "which this simulation is embedded.*"
    ],
  "theme": "",
  "showTopBar": true,
  "showBottomBar": true,
  "padding": 10,
  "models": [
    {
      "type": "md2d",
      "id": "salt",
      "url": "models/lab-version/1/md2d/interactions/molecular-sorting/model.json",
      "onLoad": [
        "start();",
        "callEvery(50, function() {",
        "  batch(function() {",
        "    var BY = get('height') * 0.5;",
        "    var FORCE_RATIO = 0.00005;",
        "    for (var i = 0, len = getNumberOfAtoms(); i < len; i++) {",
        "      var a = getAtomProperties(i);",
        "      if (a.element === 1) {",
        "        if (Math.abs(a.y - BY) > 0.05) {",
        "          setAtomProperties(i, {charge: FORCE_RATIO * (a.y - BY), friction: 0.03});",
        "        } else {",
        "          setAtomProperties(i, {charge: 0, friction: 0});",
        "        }",
        "      }",
        "      else if (a.element === 2) {",
        "        if (a.y < BY - 0.05) {",
        "          setAtomProperties(i, {charge: FORCE_RATIO * -0.2});",
        "        } else {",
        "          setAtomProperties(i, {charge: 0});",
        "        }",
        "      }",
        "      else if (a.element === 3) {",
        "        if (a.y > BY + 0.05) {",
        "          setAtomProperties(i, {charge: FORCE_RATIO * 0.2});",
        "        } else {",
        "          setAtomProperties(i, {charge: 0});",
        "        }",
        "      }",
        "      if (a.x < 0.3 && Math.abs(a.y - 1.25 < 0.2)) {",
        "        // make sure that atoms don't get stuck behind the small rectangle and don't block new atoms",
        "        setAtomProperties(i, {vx: 0.0003});",
        "      }",
        "    }",
        "  });",
        "})"
      ],
      "viewOptions": {
        "controlButtons": ""
      }
    }
  ],
  "propertiesToRetain": [],
  "parameters": [],
  "outputs": [],
  "filteredOutputs": [],
  "helpTips": [],
  "dataSets": [],
  "components": [
    {
      "id": "insert-molecule",
      "type": "button",
      "action": [
        "var element = Math.floor(Math.random() * 3) + 1;",
        "var vy =  0.00003;",
        "if (Math.random() > 0.5) vy = vy * -1;",
        "addAtom({element: element, x: 0.1, y: 1.25, vy: vy});"
      ],
      "text": "Insert a molecule",
      "width": "",
      "height": "",
      "disabled": false,
      "tooltip": "",
      "helpIcon": false
    },
    {
      "id": "reset",
      "type": "button",
      "action": [
        "reloadModel();"
      ],
      "text": "Reset",
      "width": "",
      "height": "",
      "disabled": false,
      "tooltip": "",
      "helpIcon": false
    }
  ],
  "layout": {
    "bottom": [
      "insert-molecule",
      "reset"
    ],
    "right": []
  },
  "template": [
    {
      "id": "right",
      "top": "model.top",
      "bottom": "model.bottom",
      "left": "model.right",
      "padding-left": "1em",
      "padding-right": "1em"
    },
    {
      "id": "bottom",
      "top": "right.bottom",
      "left": "model.left",
      "width": "model.width",
      "padding-top": "0.5em",
      "align": "center"
    }
  ]
}
