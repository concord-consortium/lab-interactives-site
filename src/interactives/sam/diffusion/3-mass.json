{
  "title": "Diffusion & Molecular Mass",
  "publicationStatus": "public",
  "subtitle": "How does molecular mass affect the rate of diffusion?",
  "about": "Explore the role of molecular mass on the rate of diffusion. Select the mass of the molecules behind the barrier. Remove the barrier, and measure the amount of time it takes the molecules to reach the gas sensor. When the gas sensor has detected three molecules, it will stop the experiment. Compare the diffusion rates of the lightest, heavier and heaviest molecules. Trace an individual molecule to see the path it takes.",
  "aspectRatio": 1.7,
  "models": [
    {
      "type": "md2d",
      "id": "model1",
      "url": "models-converted/lab-version/1/md2d/sam-activities/diffusion/DiffusionTemp/DiffusionMass.json",
      "viewOptions": {
        "controlButtons": "play",
        "controlButtonStyle": "text",
        "textBoxes": [
          {
            "text": "Gas sensor",
            "x": 6.8,
            "y": 0.2,
            "rotate": -90,
            "width": 2,
            "textAlign": "center",
            "frame": "rectangle",
            "fontSize": 0.19,
            "strokeOpacity": 0,
            "backgroundColor": "rgba(145,83,205,0.5)",
            "layer": 1
          }
        ]
      },
      "modelOptions": {
        "unitsScheme": "mks",
        "timeStep": 1.5,
        "timeStepsPerTick": 75
      },
      "onLoad": [
        "onPropertyChange('time', function(t) {",
        "  var atoms               = atomsWithinRect(6.75, 0, 0.25, 1.96, get('gasElementType'));",
        "  var nNewAtomsInTarget   = 0;",
        "  var nAtomsInTargetTotal = get('nAtomsInTargetTotal')",
        "  for(var i = 0; i < atoms.length; i++) {",
        "    if (!getAtomProperties(atoms[i]).pinned) { ",
        "      setAtomProperties(atoms[i], {pinned: 1});",
        "      nNewAtomsInTarget++;",
        "    }",
        "  }",
        "  set('nAtomsInTargetTotal', nAtomsInTargetTotal + nNewAtomsInTarget);",
        "  set('experimentTime', get('experimentRunning') ? t - get('timeBarrierRemoved') : 0);",
        "});"
      ]
    }
  ],
  "exports": {
    "perRun": [
      "MolecularMass",
      "targetTemperature",
      "experimentTime"
    ],
    "perTick": []
  },
  "parameters": [
    {
      "name": "gasElementType",
      "initialValue": 2,
      "onChange": [
        "for (var i = 0; i < 17; i++) {",
        "  setAtomProperties(i, {element: value});",
        "}",
        "set({MolecularMass: getElementProperties(value).mass});",
        "setTemperatureOfAtoms([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],500);"
      ]
    },
    {
      "name": "tracedAtom",
      "initialValue": -99,
      "onChange": ""
    },
    {
      "name": "nAtomsInTargetTotal",
      "initialValue": 0,
      "onChange": "if (value >= 3) { stop() }"
    },
    {
      "name": "wasMarked",
      "initialValue": 0,
      "onChange": ""
    },
    {
      "name": "timeBarrierRemoved",
      "initialValue": 0,
      "onChange": ""
    },
    {
      "name": "experimentRunning",
      "initialValue": false,
      "onChange": ""
    },
    {
      "name": "experimentTime",
      "label": "Experiment time",
      "unitType": "time",
      "initialValue": 0,
      "onChange": ""
    },
    {
      "name": "MolecularMass",
      "initialValue": 40,
      "label": "Molecular Mass"
    },
    {
      "name": "selectedTemperature",
      "initialValue": 2,
      "onChange": [
        "var targets = [100, 250, 500, 1500, 2000];",
        "set('targetTemperature', targets[value]);"
      ]
    },
    {
      "name": "tracingAtom",
      "initialValue": false,
      "onChange": [
        "if (!value) {",
        "  untraceAtom();",
        "} else {",
        "  var idx = randomInteger(18);",
        "  traceAtom(idx);",
        "  set('tracedAtom',idx);",
        "}"
      ]
    }
  ],
  "components": [
    {
      "type": "pulldown",
      "id": "mass-pulldown",
      "property": "gasElementType",
      "label": "Molecular mass",
      "labelOn": "top",
      "options": [
        {
          "text": "Low",
          "value": 0
        },
        {
          "text": "Medium",
          "value": 2
        },
        {
          "text": "High",
          "value": 3
        }
      ]
    },
    {
      "type": "checkbox",
      "id": "trace-atom",
      "text": "Trace a molecule",
      "property": "tracingAtom"
    },
    {
      "type": "button",
      "id": "remove-obstacle",
      "text": "Remove barrier",
      "action": [
        "if (isStopped()) {",
        "  alert('Press start before removing the barrier');",
        "} else if (getNumberOfObstacles() > 0) { ",
        "  removeObstacle(0); ",
        "  set('timeBarrierRemoved', get('time'));",
        "  set('experimentRunning', true)",
        "}"
      ]
    },
    {
      "type": "button",
      "id": "reset-barrier",
      "text": "Reset experiment",
      "action": [
        "reloadModel();"
      ]
    },
    {
      "type": "slider",
      "id": "temperature-slider",
      "min": 0,
      "max": 4,
      "labels": [
        {
          "value": 0,
          "label": "Low"
        },
        {
          "value": 2,
          "label": "Medium"
        },
        {
          "value": 4,
          "label": "High"
        }
      ],
      "steps": 4,
      "title": "Temperature",
      "property": "selectedTemperature"
    },
    {
      "type": "barGraph",
      "id": "thermometer",
      "property": "targetTemperature",
      "title": "Thermometer",
      "labels": 0,
      "min": 0,
      "max": 2500
    },
    {
      "type": "numericOutput",
      "id": "experiment-time",
      "property": "experimentTime",
      "displayValue": "return format('.1f')(value)"
    }
  ],
  "layout": {
    "bottom": [
      [
        "mass-pulldown",
        "temperature-slider",
        "experiment-time"
      ],
      [
        "remove-obstacle",
        "reset-barrier"
      ],
      [
        "trace-atom"
      ]
    ],
    "right": [
      "thermometer"
    ]
  },
  "template": [
    {
      "id": "top",
      "bottom": "model.top",
      "width": "interactive.width"
    },
    {
      "id": "right",
      "top": "model.top",
      "left": "model.right",
      "height": "model.height",
      "padding-left": "1em",
      "padding-right": "0.5em"
    },
    {
      "id": "bottom",
      "top": "model.bottom",
      "width": "interactive.width",
      "padding-top": "0.5em",
      "align": "center"
    }
  ],
  "i18nMetadata": "locales/metadata/interactives/sam/diffusion/3-mass.json"
}