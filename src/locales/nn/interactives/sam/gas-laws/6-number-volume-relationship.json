{
  "title": "The Number-Volume Relationship",
  "publicationStatus": "public",
  "subtitle": "Explore how the volume of a gas is related to the number of gas molecules.",
  "about": [
    "The model contains gas molecules under constant pressure. The barrier moves when the",
    "volume of gas expands or contracts. Run the model and select different numbers of",
    "molecules from the drop-down menu. What is the relationship between the number of",
    "molecules and the volume of a gas?",
    "",
    "----",
    "*Note: Although the atoms in this model are in a flat plane, volume is calculated using 0.1 nm as the depth of the container.*"
  ],
  "aspectRatio": 1.2,
  "models": [
    {
      "type": "md2d",
      "id": "page5$0",
      "url": "models-converted/lab-version/1/md2d/sam-activities/gas-laws/original-interactives-in-pages/page6/page6noScale$0.json",
      "viewOptions": {
        "controlButtons": "play_reset",
        "textBoxes": [
          {
            "text": "A piston with constant pressure on it.",
            "x": 1.973017120361328,
            "y": 1.7,
            "width": 0.5,
            "fontScale": 1.1,
            "layer": 1,
            "frame": "rounded rectangle",
            "hostType": "RectangularObstacle",
            "hostIndex": 0,
            "backgroundColor": "rgb(250,250,250)",
            "textAlign": "center"
          }
        ]
      }
    }
  ],
  "outputs": [
    {
      "name": "volume",
      "unitAbbreviation": "nm³",
      "label": "Volume",
      "value": [
        "return getObstacleProperties(0).x * get('height') * 0.1;"
      ]
    }
  ],
  "parameters": [
    {
      "name": "atomsCount",
      "initialValue": 120,
      "onChange": [
        "var obsX = getObstacleProperties(0).x;",
        "/* Ensure that available volume is enough for 100 molecules. */",
        "if (value >= 100 && obsX < 1) { obsX = 1; setObstacleProperties(0, {x: obsX}); }",
        "batch(function () {",
        "  var atomsCount = getNumberOfAtoms();",
        "  var xMax = obsX - getElementProperties(3).sigma;",
        "  var h = get('height');",
        "  while (atomsCount < value) {",
        "    if (addAtom({ element: 3, x: xMax * Math.random(), y: h * Math.random()})) ",
        "      atomsCount += 1;",
        "  }",
        "  while (atomsCount > value) {",
        "    removeAtom(getNumberOfAtoms() - 1);",
        "    atomsCount -= 1;",
        "  }",
        "});"
      ]
    }
  ],
  "components": [
    {
      "type": "pulldown",
      "id": "pulldown1",
      "property": "atomsCount",
      "options": [
        {
          "text": "120 molecules",
          "value": 120
        },
        {
          "text": "100 molecules",
          "value": 100
        },
        {
          "text": "80 molecules",
          "value": 80
        },
        {
          "text": "60 molecules",
          "value": 60
        },
        {
          "text": "40 molecules",
          "value": 40
        },
        {
          "text": "20 molecules",
          "value": 20
        }
      ]
    },
    {
      "type": "numericOutput",
      "id": "current-volume",
      "label": "Gas volume",
      "units": "nm³",
      "property": "volume",
      "displayValue": "return format('.2f')(value)"
    }
  ]
}