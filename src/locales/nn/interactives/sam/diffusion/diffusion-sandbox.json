{
  "title": "Diffusion Sandbox",
  "publicationStatus": "draft",
  "subtitle": "Explore how size and number of particles affect diffusion among gases.",
  "about": "Modify the model by adding and arranging molecules in order to explore how diffusion works.",
  "aspectRatio": 1.5,
  "models": [
    {
      "type": "md2d",
      "id": "diffusion-sandbox$0",
      "url": "models/lab-version/1/md2d/sam/diffusion/diffusion-sandbox-mml.json",
      "viewOptions": {
        "controlButtons": "play_reset",
        "showClock": true,
        "showVelocityVectors": false
      }
    }
  ],
  "outputs": [
    {
      "name": "vxMean",
      "unitType": "velocity",
      "value": [
        "var vxSum = 0;",
        "var atomNum = getNumberOfAtoms();",
        "for (var i = 0; i < atomNum; i++) {",
        "  vxSum += Math.abs(getAtomProperties(i).vx);",
        "}",
        "return vxSum / atomNum;"
      ]
    },
    {
      "name": "vyMean",
      "unitType": "velocity",
      "value": [
        "var vySum = 0;",
        "var atomNum = getNumberOfAtoms();",
        "for (var i = 0; i < atomNum; i++) {",
        "  vySum += Math.abs(getAtomProperties(i).vy);",
        "}",
        "return vySum / atomNum;"
      ]
    }
  ],
  "components": [
    {
      "type": "text",
      "id": "elem3-label",
      "text": "Blue molecules",
      "padding-top": "3em",
      "width": "12em"
    },
    {
      "type": "text",
      "id": "elem1-label",
      "text": "White molecules",
      "padding-top": "3em",
      "width": "12em"
    },
    {
      "type": "text",
      "id": "elem2-label",
      "text": "Green molecules",
      "padding-top": "3em",
      "width": "12em"
    },
    {
      "type": "button",
      "id": "add-elem-3",
      "text": "Add",
      "width": "6em",
      "action": [
        "var elemNum = 3;",
        "var rand = function(seed) { return Math.random() * 4*seed - 2*seed;};",
        "var vy = rand(get('vyMean') || Math.random());",
        "var vx = rand(get('vxMean') || Math.random());",
        "var maxX = 1.6 - getElementProperties(elemNum).sigma;",
        "var m = { element: elemNum, x: maxX * Math.random(), y: get('height') * Math.random(), vx: vx, vy: vy};",
        "addAtom(m);",
        "console.log('adding pink: ', m);"
      ]
    },
    {
      "type": "button",
      "id": "add-elem-1",
      "text": "Add",
      "width": "6em",
      "action": [
        "var elemNum = 1;",
        "var rand = function(seed) { return Math.random() * 4*seed - 2*seed;};",
        "var vy = rand(get('vyMean') || Math.random());",
        "var vx = rand(get('vxMean') || Math.random());",
        "var m = { element: elemNum, x: get('width') * Math.random(), y: get('height') * Math.random(), vx: vx, vy: vy};",
        "addAtom(m);",
        "console.log('adding yellow: ', m);"
      ]
    },
    {
      "type": "button",
      "id": "add-elem-2",
      "text": "Add",
      "width": "6em",
      "action": [
        "var elemNum = 2;",
        "var minX = 1.6 + getElementProperties(elemNum).sigma;",
        "var rand = function(seed) { return Math.random() * 4*seed - 2*seed;};",
        "var vy = rand(get('vyMean') || Math.random());",
        "var vx = rand(get('vxMean') || Math.random());",
        "var m = { element: elemNum, x: (get('width') - minX) * Math.random() + minX , y: get('height') * Math.random(), vx: vx, vy: vy};",
        "addAtom(m);",
        "console.log('adding purple: ', m);"
      ]
    },
    {
      "type": "button",
      "id": "remove-elem-3",
      "text": "Remove",
      "width": "6em",
      "action": [
        "var idx = getNumberOfAtoms()-1;",
        "if (idx == 0) { return; }",
        "for (var i = idx; i >= 0; i--) {",
        "  if (getAtomProperties(i).element == 3) {",
        "    removeAtom(i); break;",
        "  }",
        "}"
      ]
    },
    {
      "type": "button",
      "id": "remove-elem-1",
      "text": "Remove",
      "width": "6em",
      "action": [
        "var idx = getNumberOfAtoms()-1;",
        "if (idx == 0) { return; }",
        "for (var i = idx; i >= 0; i--) {",
        "  if (getAtomProperties(i).element == 1) {",
        "    removeAtom(i); break;",
        "  }",
        "}"
      ]
    },
    {
      "type": "button",
      "id": "remove-elem-2",
      "text": "Remove",
      "width": "6em",
      "action": [
        "var idx = getNumberOfAtoms()-1;",
        "if (idx == 0) { return; }",
        "for (var i = idx; i >= 0; i--) {",
        "  if (getAtomProperties(i).element == 2) {",
        "    removeAtom(i); break;",
        "  }",
        "}"
      ]
    },
    {
      "type": "slider",
      "id": "temperature-slider",
      "width": "30em",
      "min": 100,
      "max": 20000,
      "labels": [
        {
          "value": 100,
          "label": "Cold"
        },
        {
          "value": 20000,
          "label": "Hot"
        }
      ],
      "steps": 200,
      "title": "Temperature",
      "property": "targetTemperature"
    }
  ],
  "layout": {
    "bottom1": [
      "temperature-slider"
    ],
    "bottom2": [
      [
        "elem3-label",
        "elem1-label",
        "elem2-label"
      ],
      [
        "add-elem-3",
        "remove-elem-3",
        "add-elem-1",
        "remove-elem-1",
        "add-elem-2",
        "remove-elem-2"
      ]
    ]
  },
  "template": [
    {
      "id": "bottom2",
      "left": "model.left",
      "top": "model.bottom",
      "width": "model.width",
      "padding-top": "8em",
      "align": "center",
      "fontScale": 0.6
    },
    {
      "id": "bottom1",
      "left": "model.left",
      "top": "model.bottom",
      "width": "model.width",
      "padding-top": "1em",
      "align": "center",
      "fontScale": 0.8
    },
    {
      "id": "right",
      "top": "3em",
      "left": "model.right",
      "padding-right": "1em",
      "align": "center",
      "fontScale": 0.8
    },
    {
      "id": "left",
      "top": "3em",
      "right": "model.left",
      "align": "center",
      "fontScale": 0.6
    }
  ]
}
